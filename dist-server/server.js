var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,s,o){void 0===o&&(o=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&("get"in n?t.__esModule:!n.writable&&!n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,o,n)}:function(e,t,s,o){e[o=void 0===o?s:o]=t[s]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||(()=>{var n=function(e){return(n=Object.getOwnPropertyNames||function(e){var t,s=[];for(t in e)Object.prototype.hasOwnProperty.call(e,t)&&(s[s.length]=t);return s})(e)};return function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s=n(e),o=0;o<s.length;o++)"default"!==s[o]&&__createBinding(t,e,s[o]);return __setModuleDefault(t,e),t}})();Object.defineProperty(exports,"__esModule",{value:!0});let WebSocket=__importStar(require("ws")),bot_controller_1=require("./bot.controller"),farcaster_controller_1=require("./farcaster.controller"),eventBus_interface_1=require("./eventBus.interface"),botConfig=__importStar(require("./config")),Reset="[0m",Blue="[34m",Green="[32m",Red="[31m",Yellow="[33m",Magenta="[35m",Italic="[3m",Underscore="[4m",Cyan="[36m",Gray="[90m";class WebSocketServer{constructor(){this.MEM_USED=process.memoryUsage(),this.eventBus=new eventBus_interface_1.EventBusImpl,this.init()}async initEventBus(){this.eventBus.subscribe("LAST_EVENT_ID",t=>{this.wss&&this.wss.clients.forEach(e=>{e.readyState===WebSocket.OPEN&&e.send(JSON.stringify({type:"LAST_EVENT_ID",message:t}))})}),this.eventBus.subscribe("LOG",t=>{this.wss&&this.wss.clients.forEach(e=>{e.readyState===WebSocket.OPEN&&e.send(JSON.stringify({type:"LOG",message:t}))})}),this.eventBus.subscribe("PRINT_MSG",s=>{this.wss&&this.wss.clients.forEach(e=>{var t;e.readyState===WebSocket.OPEN&&(t=JSON.stringify(s),e.send(t))})})}initWebSockets(){botConfig.USE_WS&&(this.wss=new WebSocket.Server({port:parseInt(botConfig.WS_PORT)})),this.wss&&this.wss.on("connection",s=>{s.on("message",t=>{this.handleCommand(this.wss,t),this.wss.clients.forEach(e=>{e!==s&&e.readyState===WebSocket.OPEN&&(console.log("Sending to another client:",t),e.send(t))})})})}async init(){console.log("Initializing Events Bus..."),this.initEventBus(),console.log("Initializing Farcaster Events..."),this.farcaster=new farcaster_controller_1.Farcaster(this.eventBus),console.log("Waking up Bot "+botConfig.BotName+botConfig.BotIcon+"..."),this.botAvatar=new bot_controller_1.BotAvatar(this.eventBus,this.farcaster),this.botAvatar.displayInternalClock(),await this.botAvatar.preloadNotionDocuments(),console.log(botConfig.USE_WS?"Initializing WebSockets...":"WebSockets OFF"),botConfig.USE_WS&&this.initWebSockets(),console.log("Targets:"),console.dir(botConfig.TARGETS),console.dir(botConfig.TARGET_CHANNELS),console.dir(botConfig.CAST_TO_CHANNEL),console.log(botConfig.LOG_MESSAGES?"LOG MESSAGES is ON":"LOG MESSAGES is OFF"),botConfig.PUBLISH_TO_FARCASTER?console.warn(Yellow+"PUBLISH TO FARCASTER is ON"+Reset):console.warn(Yellow+"PUBLISH TO FARCASTER is OFF"+Reset),console.log(0<botConfig.NEW_CASTS_INTERVAL_MIN?Yellow+`Cast New Messages ${botConfig.NEW_CASTS_INTERVAL_MIN} minutes interval...`+Reset:Yellow+"Cast New Messages OFF"+Reset),0<botConfig.NEW_CASTS_INTERVAL_MIN&&setInterval(async()=>{this.handleCastNewMessagetoChannel().then(s=>{this.wss&&this.wss.clients.forEach(e=>{var t;e.readyState===WebSocket.OPEN&&(t=JSON.stringify(s),e.send(t))})})},60*botConfig.NEW_CASTS_INTERVAL_MIN*1e3),botConfig.DISPLAY_MEM_USAGE&&(setInterval(()=>{this.printMemUsage()},6e4),this.printMemUsage()),this.wss&&this.wss.on("listening",()=>{console.log("WS Server ready on port: "+botConfig.WS_PORT)}),console.log(`Bot ${Cyan}${botConfig.BotName}${Reset} is up! `+Cyan+botConfig.BotIcon+Reset),console.log("")}async printMemUsage(){for(var e in console.log(Green),console.log("##########################"),this.MEM_USED)console.log(`${e}: ${Math.round(this.MEM_USED[e]/1024/1024*100)/100} MB`);console.log("##########################"),console.log(Reset)}async handleCommand(e,t){var{name:t,message:s}=JSON.parse(t);let o=await this.botAvatar.replyMessage(t,s);e.clients.forEach(e=>{e.readyState===WebSocket.OPEN&&e.send(JSON.stringify(o))})}async handleCastNewMessagetoChannel(){var e=await this.botAvatar.castNewMessagetoChannel();if(e)return this.farcaster.publishNewChannelCast(e.message),e;console.error("Error generating new Cast Message for Channel")}}new WebSocketServer;