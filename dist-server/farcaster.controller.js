var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,s,a){void 0===a&&(a=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&("get"in n?t.__esModule:!n.writable&&!n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,a,n)}:function(e,t,s,a){e[a=void 0===a?s:a]=t[s]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||(()=>{var n=function(e){return(n=Object.getOwnPropertyNames||function(e){var t,s=[];for(t in e)Object.prototype.hasOwnProperty.call(e,t)&&(s[s.length]=t);return s})(e)};return function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s=n(e),a=0;a<s.length;a++)"default"!==s[a]&&__createBinding(t,e,s[a]);return __setModuleDefault(t,e),t}})(),__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Farcaster=void 0;let Reset="[0m",Blue="[34m",Green="[32m",Red="[31m",Yellow="[33m",Magenta="[35m",Italic="[3m",Underscore="[4m",Cyan="[36m",Gray="[90m",hub_nodejs_1=require("@farcaster/hub-nodejs"),nodejs_sdk_1=require("@neynar/nodejs-sdk"),neynarClient_1=__importDefault(require("./lib/neynarClient")),neverthrow_1=require("neverthrow"),hub_client_1=require("./lib/hub-client"),event_1=require("./api/event"),botConfig=__importStar(require("./config")),grapheme_splitter_1=__importDefault(require("grapheme-splitter")),node_util_1=require("node:util"),urlMatchesTargetChannel=t=>botConfig.TARGET_CHANNELS.some(e=>t.endsWith(e));class Farcaster{constructor(e){this.eventBus=e,this.USERS_FNAME_MAP=new Map,this.TARGET_FNAME_MAP=new Map,this.isConnected=!1,this.isReconnecting=!1,this.subscriberStream()}bytesToHex(e){return"0x"+Buffer.from(e).toString("hex")}hubProtocolToVerificationProtocol(e){if(e===hub_nodejs_1.Protocol.ETHEREUM)return"ethereum"}protocolBytesToString(e,t){switch(t){case hub_nodejs_1.Protocol.ETHEREUM:case"ethereum":return this.bytesToHex(e);default:throw new Error("Unexpected protocol: "+t)}}farcasterTimeToDate(e){if(void 0!==e){if(null===e)return null;e=(0,hub_nodejs_1.fromFarcasterTime)(e);if(e.isErr())throw e.error;return new Date(e.value)}}async insertMentions(t,s,a){let n=new grapheme_splitter_1.default;var r=n.splitGraphemes(t);a.map(e=>n.splitGraphemes(t.slice(0,e)).length);for(let e=s.length-1;0<=e;e--){var o=s[e],o=await this.handleUserFid(o),i=a[e];r.splice(i,0,"@"+o)}return r.join("")}convertProtobufMessageBodyToJson(e){let t,s,a;switch(null==(t=e.data)?void 0:t.type){case hub_nodejs_1.MessageType.CAST_ADD:if(!e.data.castAddBody)return void console.error("Missing castAddBody");var n,{embeds:r,mentions:o,mentionsPositions:i,text:d,parentCastId:c,parentUrl:h,type:_}=e.data.castAddBody,l=[];for(n of r)void 0!==n.castId?l.push(this.bytesToHex(n.castId.hash)):void 0!==n.url&&l.push(n.url);a={embeds:l,mentions:o,mentionsPositions:i,text:d,type:_,parent:c?{fid:c.fid,hash:this.bytesToHex(c.hash)}:h};break;case hub_nodejs_1.MessageType.CAST_REMOVE:if(!e.data.castRemoveBody)throw new Error("Missing castRemoveBody");r=e.data.castRemoveBody.targetHash;a={targetHash:this.bytesToHex(r)};break;case hub_nodejs_1.MessageType.REACTION_ADD:case hub_nodejs_1.MessageType.REACTION_REMOVE:if(!e.data.reactionBody)throw new Error("Missing reactionBody");if(e.data.reactionBody.targetCastId){var{type:o,targetCastId:{fid:i,hash:d}}=e.data.reactionBody;a={type:o,target:{fid:i,hash:this.bytesToHex(d)}}}else{if(!e.data.reactionBody.targetUrl)throw new Error("Missing targetCastId and targetUrl on reactionBody");var{type:_,targetUrl:c}=e.data.reactionBody;a={type:_,target:c}}break;case hub_nodejs_1.MessageType.LINK_ADD:case hub_nodejs_1.MessageType.LINK_REMOVE:if(!e.data.linkBody)throw new Error("Missing linkBody");if(!e.data.linkBody.targetFid)throw new Error("Missing linkBody target");var{type:h,targetFid:r,displayTimestamp:o}=e.data.linkBody;if(a={type:h,targetFid:r},o){i=(0,hub_nodejs_1.fromFarcasterTime)(o);if(i.isErr())throw i.error;a.displayTimestamp=i.value}break;case hub_nodejs_1.MessageType.LINK_COMPACT_STATE:if(!e.data.linkCompactStateBody)throw new Error("Missing linkCompactStateBody");var{type:d,targetFids:_}=e.data.linkCompactStateBody;a={type:d,targetFids:_};break;case hub_nodejs_1.MessageType.VERIFICATION_ADD_ETH_ADDRESS:if(!e.data.verificationAddAddressBody)throw new Error("Missing verificationAddAddressBody");var{address:c,claimSignature:h,blockHash:r,protocol:o}=e.data.verificationAddAddressBody;a={address:this.protocolBytesToString(c,o),claimSignature:this.protocolBytesToString(h,o),blockHash:this.protocolBytesToString(r,o),protocol:this.hubProtocolToVerificationProtocol(o)};break;case hub_nodejs_1.MessageType.VERIFICATION_REMOVE:if(!e.data.verificationRemoveBody)throw new Error("Missing verificationRemoveBody");var{address:i,protocol:d}=e.data.verificationRemoveBody;a={address:this.protocolBytesToString(i,d),protocol:this.hubProtocolToVerificationProtocol(d)};break;case hub_nodejs_1.MessageType.USER_DATA_ADD:if(!e.data.userDataBody)throw new Error("Missing userDataBody");var{type:_,value:c}=e.data.userDataBody;a={type:_,value:c};break;case hub_nodejs_1.MessageType.USERNAME_PROOF:if(!e.data.usernameProofBody)throw new Error("Missing usernameProofBody");var{timestamp:h,name:r,owner:o,signature:i,fid:d,type:_}=e.data.usernameProofBody;a={timestamp:h,name:this.bytesToHex(r),owner:this.bytesToHex(o),signature:this.bytesToHex(i),fid:d,type:_};break;default:throw new Error("Unknown message type "+(null==(s=e.data)?void 0:s.type))}return a}async subscriberStream(){var e=await hub_client_1.hubClient.subscribe({eventTypes:[hub_nodejs_1.HubEventType.MERGE_MESSAGE,hub_nodejs_1.HubEventType.PRUNE_MESSAGE,hub_nodejs_1.HubEventType.REVOKE_MESSAGE,hub_nodejs_1.HubEventType.MERGE_ON_CHAIN_EVENT]});e.isErr()?(console.error(e.error+"\nError starting stream"),this.reconnect()):(this.isConnected=!0,this.isReconnecting=!1,e.match(e=>{console.info("Subscribed to Farcaster Stream: HEAD"),e.on("data",async e=>{this.handleEvent(e),(0,event_1.saveLatestEventId)(e.id),this.eventBus.publish("LAST_EVENT_ID",e.id)}),e.on("end",async()=>{console.warn("Hub stream ended")}),e.on("close",async()=>{console.warn("Hub stream closed"),this.isConnected=!1,this.reconnect()})},e=>{console.error(e,"Error streaming data.")}))}reconnect(){console.log("Reconnect!"),this.isConnected||this.isReconnecting||(console.log("Reconnecting in 1 second..."),this.isReconnecting=!0,setTimeout(()=>{this.isConnected||this.subscriberStream()},2777))}logRelevantStreamDetails(t){let s={};["error","statusCode","closed","destroyed","_readableState","call"].forEach(e=>{e in t&&(s[e]=t[e])}),console.log("Filtered stream details:",(0,node_util_1.inspect)(s,{depth:2,colors:!0}))}async handleEvent(e){switch(e.type){case hub_nodejs_1.HubEventType.MERGE_MESSAGE:var t=e.mergeMessageBody.message;switch(t.data.type){case hub_nodejs_1.MessageType.CAST_ADD:this.handleAddCasts([t]);break;case hub_nodejs_1.MessageType.CAST_REMOVE:case hub_nodejs_1.MessageType.VERIFICATION_ADD_ETH_ADDRESS:case hub_nodejs_1.MessageType.VERIFICATION_REMOVE:case hub_nodejs_1.MessageType.USER_DATA_ADD:case hub_nodejs_1.MessageType.REACTION_ADD:case hub_nodejs_1.MessageType.REACTION_REMOVE:case hub_nodejs_1.MessageType.LINK_ADD:case hub_nodejs_1.MessageType.LINK_REMOVE:}break;case hub_nodejs_1.HubEventType.PRUNE_MESSAGE:switch(e.pruneMessageBody.message.data.type){case hub_nodejs_1.MessageType.CAST_ADD:case hub_nodejs_1.MessageType.REACTION_ADD:case hub_nodejs_1.MessageType.LINK_ADD:}break;case hub_nodejs_1.HubEventType.REVOKE_MESSAGE:break;case hub_nodejs_1.HubEventType.MERGE_ON_CHAIN_EVENT:switch(e.mergeOnChainEventBody.onChainEvent.type){case hub_nodejs_1.OnChainEventType.EVENT_TYPE_ID_REGISTER:case hub_nodejs_1.OnChainEventType.EVENT_TYPE_SIGNER:case hub_nodejs_1.OnChainEventType.EVENT_TYPE_STORAGE_RENT:}break;default:console.log("UNHANDLED HUB EVENT",e.id)}}async getTrendingFeed(e=nodejs_sdk_1.FilterType.GlobalTrending){let t="";try{var s,a=await neynarClient_1.default.fetchFeed(nodejs_sdk_1.FeedType.Filter,{filterType:e});for(s of Object.values(a.casts))t+=s.author.display_name+": "+s.text}catch(e){console.error("Error fetching Farcaster Feed",e)}return t}async publishToFarcaster(e,t){botConfig.LOG_MESSAGES,botConfig.PUBLISH_TO_FARCASTER?neynarClient_1.default.publishCast(botConfig.SIGNER_UUID,e,t).then(e=>{console.log(Yellow+"Cast published successfully: "+e.hash+Reset)}).catch(e=>{(0,nodejs_sdk_1.isApiErrorResponse)(e)?console.error(Red+e.response.data+Reset):console.error(Red+"Failed to publish cast: "+e+ +Reset)}):console.log(Yellow+"PUBLISH_TO_FARCASTER OFF"+Reset)}async publishUserReply(e,t,s){this.publishToFarcaster(e,{replyTo:t,parent_author_fid:s})}async publishNewChannelCast(e){var t={channelId:botConfig.CAST_TO_CHANNEL};this.publishToFarcaster(e,t)}async handleData_new(t){for(let e=0;e<t.length;e++){var s=t[e],a=this.convertProtobufMessageBodyToJson(s);if("text"in a&&"mentions"in a&&"mentionsPositions"in a&&a.mentions instanceof Array&&a.mentionsPositions instanceof Array){let e=a.text;0<a.mentions.length&&(e=await this.insertMentions(a.text,a.mentions,a.mentionsPositions)),a.textWithMentions=e;var n=await this.handleUserFid(s.data.fid);s.data.fid,s.data.type,this.farcasterTimeToDate(s.data.timestamp)}}}async handleAddCasts(t){for(let e=0;e<t.length;e++){var s=t[e].data;if(s.castAddBody){if(botConfig.TARGETS.includes(s.fid))return;if(s.castAddBody.parentCastId&&botConfig.TARGETS.includes(s.castAddBody.parentCastId.fid))return void this.handleReceivedReply(t[e]);var a=s.castAddBody.mentions.find(e=>botConfig.TARGETS.includes(e));if(a)return void this.handleMentioned(t[e],a);if(s.castAddBody.parentUrl&&urlMatchesTargetChannel(s.castAddBody.parentUrl))return void this.handleTargetChannelCast(t[e])}}}async handleUserFid(e){var t;return this.USERS_FNAME_MAP.has(e)||(t=await this.getFnameFromFid(e)).isOk()&&this.USERS_FNAME_MAP.set(e,t.value),this.USERS_FNAME_MAP.size>=botConfig.MAX_USER_CACHE&&this.USERS_FNAME_MAP.delete(this.USERS_FNAME_MAP.keys().next().value),this.USERS_FNAME_MAP.get(e)}async getFnameFromFid(e){var t=await hub_client_1.hubClient.getUserData({fid:e,userDataType:hub_nodejs_1.UserDataType.USERNAME});return(0,neverthrow_1.ok)(t.match(e=>(0,hub_nodejs_1.isUserDataAddMessage)(e)?e.data.userDataBody.value:"",()=>e+"!"))}async handleTargetFid(e){var t;return this.TARGET_FNAME_MAP.has(e)||(t=await this.getFnameFromFid(e)).isOk()&&this.TARGET_FNAME_MAP.set(e,t.value),this.TARGET_FNAME_MAP.get(e)}async handleTargetAddCast(e){this.convertProtobufMessageBodyToJson(e),await this.handleTargetFid(e.data.fid);e.data.castAddBody.parentCastId&&await this.handleUserFid(e.data.castAddBody.parentCastId.fid),e.data.castAddBody.text}async handleReceivedReply(e){await this.handleTargetFid(e.data.castAddBody.parentCastId.fid);e=await this.createCastObj(e);this.eventBus.publish("WAS_REPLIED",e)}async handleMentioned(e,t){await this.handleTargetFid(t);t=await this.createCastObj(e);this.eventBus.publish("WAS_MENTIONED",t)}async handleTargetChannelCast(e){e.data.castAddBody.parentUrl&&(e=await this.createCastObj(e),this.eventBus.publish("CHANNEL_NEW_MESSAGE",e))}async createCastObj(e){var t=this.convertProtobufMessageBodyToJson(e),s=await this.handleUserFid(e.data.fid),a=this.bytesToHex(e.hash);if("text"in t&&"mentions"in t&&"mentionsPositions"in t&&t.mentions instanceof Array&&t.mentionsPositions instanceof Array){let e=t.text;0<t.mentions.length&&(e=await this.insertMentions(t.text,t.mentions,t.mentionsPositions)),t.textWithMentions=e}return{fid:e.data.fid,fName:s,hash:a,type:e.data.type,timestamp:this.farcasterTimeToDate(e.data.timestamp),body:t}}}exports.Farcaster=Farcaster;